#!/usr/bin/env python

#Copyright (c) 2012 Johannes Reinhardt <jreinhardt@ist-dein-freund.de>
#
#Permission is hereby granted, free of charge, to any person obtaining a copy of
#this software and associated documentation files (the "Software"), to deal in
#the Software without restriction, including without limitation the rights to
#use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
#of the Software, and to permit persons to whom the Software is furnished to do
#so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

from xml.dom.minidom import parse
from sys import argv,exit
from os.path import splitext

if len(argv) < 2:
	print "Split an Inkscape SVG file into several SVG files, each containing one layer."
	print "It is possible to specify which layers are to be considered, otherwise all are split out"
	print "svgsplit sourcefile [layer1 layer2]"

dom = parse(argv[1])

wanted_layers = argv[2:]
all_layers = len(wanted_layers) == 0

base,ext = splitext(argv[1])

for doc in dom.getElementsByTagName("svg"):
	layers = []
	for child in doc.childNodes:
		if child.localName == "g":
			layers.append(doc.removeChild(child))
	for layer in layers:
		doc.appendChild(layer)
		layername = layer.getAttribute("inkscape:label")
		layer.setAttribute("style","display:inline")
		if all_layers or layername in wanted_layers:
			outname = base + "_" + layername + ext
			fid = open(outname,"w")
			doc.setAttribute("sodipodi:docname",outname)
			doc.writexml(fid)
			fid.close()
			if layername in wanted_layers:
				wanted_layers.remove(layername)
		doc.removeChild(layer).unlink()
dom.unlink()

if wanted_layers:
	print "Not all selected layers could be found:", wanted_layers
	exit(1)

exit(0)
